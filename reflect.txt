I would summarize this semester's experience of being introduced to object oriented programing as extremely positive. It was such a breath of fresh air to learn that there was more out there than the prehistoric styles of the standard C language. Now, while I do have some experience using OOP languages, such as Java and Python, C++ is definetely a more challenging experience. While my past experience does heple me understand concepts that some can find confusing, such as templates or polymorphism, what I felt like I was at a disadvantage at was dynamic memory allocation and C++'s lack of a garbage collector to deal with memory leaks. I found that I was able to finish most workshops within 1-2.5 hours, but often struggled with the submission program's gatekeeper, AKA Valgrind.

I definitely hated Valgrind to start this semester. It felt like a constant barrage of errors having to do with pointers not being freed and me none the wiser. That is, until I truly came to a firm understanding of how memory allocation works with c++, the true meaning of passing by value VS reference or pointers. I felt like once I became comfortable with memory allocation and heap control, I became a much better programmer, bot in and out of OOP244.

As far as what I would like to see improved...

Honestly, not much. I really enjoyed my experience and felt that I got the most out of this summer 2021 semester. One thing however, would be the time constraints during tests. I am aware that with enough time, anyone can cheat on their tests and exams, but I am of the belief that school should focus on rewarding those who aim to excel in their craft, rather than aiming to punish those who try to cheat. I often felt that during tests and exams, I was more focused with trying to get the project done on time, rather than trying to get done the best possible work that I can, after months of practice. Especially as a programmer, being rushed can result in mistakes, just like you don't rush a doctor durring an operation, or an artist creating a sculpture. In my eyes, programing is more of an art than a science, and you cant rush a masterpiece.